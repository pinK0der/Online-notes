import uvicorn
from fastapi import FastAPI, Depends
from sqlalchemy.orm import Session
from sqlalchemy import inspect
from app.database import engine, Base, get_db
from app.routes import notes_route
from fastapi.middleware.cors import CORSMiddleware
import datetime
# from models.notes_table import Note



#   todo:
#   üìÑ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ —Ñ–∞–π–ª	–ó–±–µ—Ä—ñ–≥–∞—Ç–∏ content –≤ —Ñ–∞–π–ª (—è–∫—â–æ –±—É–¥–µ –±–∞–≥–∞—Ç–æ —Ç–µ–∫—Å—Ç—É), –∞ –≤ –ë–î —Ç—ñ–ª—å–∫–∏ —à–ª—è—Ö
#   üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞/–ª—ñ—á–∏–ª—å–Ω–∏–∫	–°–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∞ –Ω–æ—Ç–∞—Ç–∫–∞


Base.metadata.create_all(bind=engine)
app = FastAPI()

origins = [
    "http://localhost:3000",  # —Ç–≤—ñ–π —Ñ—Ä–æ–Ω—Ç
    "http://127.0.0.1:3000",  # –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
    # –Ø–∫—â–æ –∑–∞–ª–ª—î—à –Ω–∞ Netlify/Vercel –∞–±–æ —ñ–Ω—à–µ ‚Äî –¥–æ–¥–∞–π —Ç—É—Ç –∞–¥—Ä–µ—Å—É
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,  # –∞–±–æ ["*"] –¥–ª—è –≤—Å—ñ—Ö, –∞–ª–µ –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ —É –ø—Ä–æ–¥–∞–∫—à–Ω—ñ
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(notes_route.router)

@app.get("/")
def read_root():
    return {"Hello": "World"}

@app.get("/ping")
def ping():
    return {"pong": True}

@app.get("/ping-db")
def ping_db(db: Session = Depends(get_db)):
    inspector = inspect(engine)
    tables = inspector.get_table_names()

    return {
        "message": "DB connection OK7",
        "time": datetime.datetime.now(),
        "tables": tables
    }

if __name__ == '__main__':
    uvicorn.run("main:app", reload=True)